<% layout("/layouts/boilerplate") %>
<style>
  /* üßä Form Container */
  .listing-form-container {
    display: flex;
    justify-content: center;
    padding: 3rem 1rem;
    background: #f7fafc;
    min-height: 100vh;
    font-family: "Inter", sans-serif;
  }

  .form-card {
    background: #fff;
    max-width: 650px;
    width: 100%;
    padding: 2.5rem;
    border-radius: 1.5rem;
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.08);
    animation: fadeIn 0.8s ease;
  }

  /* üíé Title */
  .form-title {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 1.8rem;
    color: #1e293b;
    text-align: center;
  }

  /* ‚úèÔ∏è Form Fields */
  .form-group {
    display: flex;
    flex-direction: column;
    margin-bottom: 1.5rem;
  }

  .form-group label {
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: #334155;
    font-size: 1rem;
  }

  .form-group input,
  .form-group textarea {
    border: 1px solid #cbd5e1;
    border-radius: 0.6rem;
    padding: 0.75rem 1rem;
    font-size: 1rem;
    font-family: "Inter", sans-serif;
    transition: border 0.3s ease;
  }

  .form-group input:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: #0d9488;
  }

  /* üñºÔ∏è Image Preview */
  .preview-box {
    margin-top: 1rem;
    text-align: center;
  }

  .preview-box img {
    max-width: 100%;
    max-height: 250px;
    border-radius: 0.8rem;
    object-fit: cover;
    border: 1px solid #e2e8f0;
  }

  /* üéØ Buttons */
  .form-buttons {
    display: flex;
    justify-content: space-between;
    margin-top: 2rem;
  }

  .btn-primary,
  .btn-secondary {
    padding: 0.75rem 2rem;
    font-weight: 600;
    border: none;
    border-radius: 2rem;
    font-size: 1rem;
    text-decoration: none;
    transition: background 0.3s ease;
    cursor: pointer;
  }

  .btn-primary {
    background-color: #0d9488;
    color: white;
  }

  .btn-primary:hover {
    background-color: #0f766e;
  }

  .btn-secondary {
    background-color: transparent;
    color: #475569;
    border: 2px solid #cbd5e1;
  }

  .btn-secondary:hover {
    background-color: #e2e8f0;
    color: #1e293b;
  }

  /* üì± Responsive */
  @media (max-width: 768px) {
    .form-buttons {
      flex-direction: column;
      gap: 1rem;
    }

    .form-card {
      padding: 2rem 1.2rem;
    }

    .form-title {
      font-size: 1.6rem;
    }
  }

  /* ‚ú® Fade In Animation */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(25px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .preview-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .preview-thumb {
    width: 120px;
    height: 90px;
    object-fit: cover;
    border-radius: 0.5rem;
    border: 1px solid #cbd5e1;
    filter: blur(4px);
    transition: all 0.3s ease;
  }

  .preview-thumb:hover {
    filter: blur(0);
    transform: scale(1.03);
  }

  .is-valid {
    border-color: #10b981 !important;
    background-color: #f0fdf4;
  }

  .is-invalid {
    border-color: #ef4444 !important;
    background-color: #fef2f2;
  }
  .preview-grid img {
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    margin-right: 12px;
  }
  .preview-thumb {
    width: 120px;
    height: 90px;
    object-fit: cover;
    border-radius: 0.5rem;
    border: 1px solid #cbd5e1;
    filter: blur(4px);
    transition: all 0.3s ease;
  }

  .preview-thumb:hover {
    filter: blur(0);
    transform: scale(1.03);
  }
  /* üì£ Custom Toast */
  .toast-notify {
    position: fixed;
    bottom: 30px;
    right: 30px;
    background: #ef4444;
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
    font-weight: 600;
    font-size: 0.95rem;
    z-index: 9999;
    display: flex;
    align-items: center;
    opacity: 0;
    transform: translateY(20px);
    pointer-events: none;
    transition: all 0.4s ease;
  }

  .toast-notify.show {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
  }

  .toast-notify.hidden {
    display: none;
  }
</style>

<div class="listing-form-container">
  <div class="form-card shadow-lg rounded-4 p-4 bg-white">
    <h2 class="form-title mb-4 fw-bold">Wanderlust Your Home</h2>

    <form
      action="/listings"
      method="POST"
      enctype="multipart/form-data"
      class="form-body"
      novalidate
    >
      <!-- Title -->
      <div class="form-group mb-3">
        <label for="title" class="form-label">Title</label>
        <input
          type="text"
          name="listing[title]"
          required
          placeholder="Enter listing title"
          class="form-control"
        />
      </div>

      <!-- Description -->
      <div class="form-group mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea
          name="listing[description]"
          rows="4"
          required
          placeholder="Write a short description..."
          class="form-control"
        ></textarea>
      </div>

      <!-- üåÜ Multiple Image Upload -->
      <div class="form-group mb-4">
        <label for="multiImageInput" class="form-label fw-semibold"
          >Upload Images (Max 5)</label
        >
        <input
          class="form-control"
          type="file"
          name="listing[images]"
          id="multiImageInput"
          accept="image/*"
          multiple
        />
        <small class="text-muted"
          >Hold Ctrl (or ‚åò) to select multiple images</small
        >

        <!-- üîç Live Preview -->
        <div
          id="multiImagePreview"
          class="preview-grid mt-3 d-flex flex-wrap gap-3"
        ></div>
      </div>

      <!-- üñºÔ∏è Existing Images (only if editing) -->
      <% if (typeof listing !== "undefined" && listing.images &&
      listing.images.length > 0) { %>
      <hr class="my-4" />
      <h5 class="mb-3 fw-semibold">Existing Images</h5>

      <div class="row g-4">
        <% listing.images.forEach((img, idx) => { %>
        <div class="col-sm-6 col-md-4 d-flex flex-column align-items-center">
          <div
            class="card shadow-sm border-0"
            style="width: 100%; border-radius: 1rem"
          >
            <img
              src="<%= img.url %>"
              class="card-img-top rounded-top"
              style="height: 220px; object-fit: cover"
            />
            <div class="card-body text-center py-3">
              <div
                class="form-check d-flex justify-content-center align-items-center gap-2"
              >
                <input class="form-check-input" type="radio" name="thumbnail"
                value="<%= img.filename %>" id="thumb<%= idx %>" <%=
                listing.thumbnail === img.filename ? "checked" : "" %> />
                <label
                  class="form-check-label small text-muted"
                  for="thumb<%= idx %>"
                >
                  Set as Thumbnail
                </label>
              </div>
            </div>
          </div>
        </div>
        <% }) %>
      </div>
      <% } %>

      <!-- Price -->
      <div class="form-group mb-3">
        <label for="price" class="form-label">Price (‚Çπ)</label>
        <input
          type="number"
          name="listing[price]"
          required
          placeholder="e.g. 1500"
          min="1"
          class="form-control"
        />
      </div>

      <!-- Location -->
      <div class="form-group mb-3">
        <label for="location" class="form-label">Location</label>
        <input
          type="text"
          name="listing[location]"
          required
          placeholder="City, Area or Address"
          class="form-control"
        />
      </div>

      <!-- Country -->
      <div class="form-group mb-4">
        <label for="country" class="form-label">Country</label>
        <input
          type="text"
          name="listing[country]"
          required
          placeholder="e.g. India"
          class="form-control"
        />
      </div>

      <!-- Buttons -->
      <div class="form-buttons d-flex justify-content-between">
        <a href="/listings" class="btn btn-outline-secondary px-4"> ‚Üê Back </a>
        <button type="submit" class="btn btn-primary px-4 shadow-sm">
          <i class="fa-solid fa-plus me-1"></i> Create
        </button>
      </div>
    </form>

    <!-- üì£ Custom Toast -->
    <div id="customToast" class="toast-notify hidden">
      <i class="fa-solid fa-triangle-exclamation me-2"></i> Max 5 images
      allowed.
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // üñºÔ∏è Multi Image Preview with blur and hover reveal
    const multiImageInput = document.getElementById("multiImageInput");
    const previewContainer = document.getElementById("multiImagePreview");

    if (multiImageInput && previewContainer) {
      multiImageInput.addEventListener("change", function () {
        previewContainer.innerHTML = "";
        const files = Array.from(this.files);
        const maxFiles = 5;

        if (files.length > maxFiles) {
          showToast("You can upload max 5 images only!");
          this.value = "";
          return;
        }

        files.forEach((file) => {
          const reader = new FileReader();
          reader.onload = function (e) {
            const img = document.createElement("img");
            img.src = e.target.result;
            img.classList.add("preview-thumb");
            previewContainer.appendChild(img);
          };
          reader.readAsDataURL(file);
        });
      });
    }

    function showToast(message) {
      const toast = document.getElementById("customToast");
      toast.textContent = message;
      toast.classList.remove("hidden");
      toast.classList.add("show");

      setTimeout(() => {
        toast.classList.remove("show");
        toast.classList.add("hidden");
      }, 3000);
    }

    // ‚úÖ Real-time Validation
    const form = document.querySelector("form");
    if (form) {
      const inputs = form.querySelectorAll(
        "input[required], textarea[required]"
      );
      inputs.forEach((input) => {
        input.addEventListener("input", () => {
          if (input.checkValidity()) {
            input.classList.remove("is-invalid");
            input.classList.add("is-valid");
          } else {
            input.classList.remove("is-valid");
            input.classList.add("is-invalid");
          }
        });
      });
    }
  });
</script>
